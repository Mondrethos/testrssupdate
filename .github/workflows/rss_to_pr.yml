name: RSS to Pull Request

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  workflow_dispatch:

jobs:
  rss_to_pr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Fetch and Parse RSS Feed
      id: fetch_rss
      run: |
        sudo apt-get install -y jq
        RSS_URL="https://store.steampowered.com/feeds/news/app/2106670/?cc=US&l=english&snr=1_2108_9__2107"
        RESPONSE=$(curl -s $RSS_URL)
        ENTRIES=$(echo "$RESPONSE" | grep -oP '(?<=<entry>).*?(?=</entry>)' | jq -R -s -c 'split("\n")')
        echo "entries=$ENTRIES" >> $GITHUB_ENV

    - name: Create Branch
      id: create_branch
      uses: actions/github-script@v6
      with:
        script: |
          const branchName = `rss-updates-${new Date().toISOString().replace(/[:\-]/g, '').split('.')[0]}`;
          const mainBranch = await github.repos.getBranch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            branch: 'main',
          });
          await github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/heads/${branchName}`,
            sha: mainBranch.data.commit.sha,
          });
          return branchName;
        result-encoding: string
        result-format: string

    - name: Create and Commit Files
      run: |
        mkdir -p updates
        entries=${{ steps.fetch_rss.outputs.entries }}
        branchName=${{ steps.create_branch.outputs.result }}
        echo $entries | jq -c '.[]' | while read entry; do
          title=$(echo $entry | grep -oP '(?<=<title>).*?(?=</title>)')
          summary=$(echo $entry | grep -oP '(?<=<summary>).*?(?=</summary>)')
          fileName="updates/${title// /_}.md"
          echo -e "# $title\n\n$summary" > $fileName
          git add $fileName
        done
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git commit -m "Add RSS feed updates"
        git push origin $branchName

    - name: Create Pull Request
      uses: actions/github-script@v6
      with:
        script: |
          const branchName = context.payload.inputs.branchName;
          await github.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "RSS Feed Updates",
            head: branchName,
            base: "main",
            body: "This pull request contains the latest updates from the RSS feed.",
          });
